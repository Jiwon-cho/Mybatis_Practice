<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="emp">
	<!-- has a 관계 한개객체를 대입할 때 -->
	<select id="selectEmpOne" resultMap="emp2Map">
		SELECT * FROM EMPLOYEE JOIN DEPARTMENT ON DEPT_CODE=DEPT_ID
		WHERE EMP_ID=#{no}
	</select>

	<resultMap type="com.emp.model.vo.Employee2" id="emp2Map">
		<id column="emp_id" property="empId" />
		<result column="emp_name" property="empName" />
		<result column="emp_no" property="empNo" />
		<result column="email" property="email" />
		<result column="phone" property="phone" />
		<result column="salary" property="salary" />
		<result column="bonus" property="bonus" />
		<association property="dept"
			javaType="com.emp.model.vo.Department">
			<id column="dept_id" property="deptId" />
			<result column="dept_title" property="deptTitle" />
			<result column="location_id" property="locationId" />



		</association>

	</resultMap>






	<select id="selectEmpAll" resultType="employee">
		SELECT E.*, DECODE(SUBSTR(EMP_NO,8,1),'1','M','3','M','2','F','4','F') AS
		GENDER FROM EMPLOYEE E
	</select>


	<select id="selectEmpCount" resultType="int">
		SELECT COUNT(*) FROM EMPLOYEE

	</select>



	<select id="searchEmp" resultType="employee">
		SELECT *
		FROM( SELECT
		E.*,DECODE(SUBSTR(EMP_NO,8,1),'1','M','3','M','2','F','4','F')
		AS
		GENDER
		FROM EMPLOYEE E) WHERE 1=1
		<!-- WHERE -->

		<!-- <where> -->		<!-- <trim prefix="where" prefixOverrides="AND|OR"> -->
		<if test="type != null and type != ''"> AND ${type} LIKE '%'||#{keyword}||'%' </if>
		<if test="gender !=null and gender !=''"> AND GENDER=#{gender} </if>
		<!-- <if test="salary != null and salary!='' and lege!=null and lege!=''"><if 
			test="lege == 'le'"> -->
		<!-- AND SALARY <![CDATA[<=]]> #{salary} -->
		<!-- AND SALARY <= #{salary} -->
		<!-- </if> <if test="lege == 'ge'"> AND SALARY >= #{SALARY} </if> </if> -->
		<!-- <if test="salary !=null and salary !=''"> AND SALARY ${lege} ${salary} 
			</if> -->
		<if
			test="salary != null and salary!='' and lege!=null and lege!=''">
			<choose>
				<when test="lege=='le'">
					AND SALARY <![CDATA[<=]]>
					#{salary}
				</when>
				<otherwise> AND SALARY >= #{salary} </otherwise>
			</choose>
		</if>
		<if
			test="hiredate!=null and hiredate!='' and hlege!=null and hlege!=''">
			<choose>
				<when test="hlege=='le'">
					AND TO_DATE(TO_CHAR(HIRE_DATE,'YYYY-MM-DD'),'YYYY-MM-DD')
<![CDATA[ <= ]]>
					TO_DATE(#{hiredate},'YYYY-MM-DD')
				</when>
				<otherwise>
					AND TO_DATE(TO_CHAR(HIRE_DATE,'YYYY-MM-DD'),'YYYY-MM-DD')
<![CDATA[ >= ]]>
					TO_DATE(#{hiredate},'YYYY-MM-DD')
				</otherwise>
			</choose>

		</if>
		<if test="jobcodes !=null and jobcodes !=''">
			AND JOB_CODE IN
			<foreach collection="jobcodes" item="job" index="i" open="("
				close=")" separator=",">
				#{job}
			</foreach>



		</if>
		<!-- </trim> -->
		<!-- </where> -->
	</select>

	<select id="selectBoard" resultMap="boardMap">
		SELECT * FROM BOARD JOIN BOARD_COMMENT ON BOARD_NO=BOARD_REF WHERE
		BOARD_NO=#{no}
	</select>
	<resultMap type="com.emp.model.vo.Board" id="boardMap">
		<id column="board_no" property="boardNo" />
		<result column="board_title" property="boardTitle" />
		<result column="board_writer" property="boardWriter" />
		<result column="board_content" property="boardContent" />
		<result column="board_date" property="boardDate" />
		<collection property="comments"
			resultMap="boardCommentMap">
		</collection>
	</resultMap>
	<resultMap type="com.emp.model.vo.BoardComment"
		id="boardCommentMap">
		<id column="board_comment_no" property="commentNo" />
		<result column="board_comment_content" property="commentContent" />
		<result column="board_comment_writer" property="commentWriter" />
		<result column="board_comment_date" property="commentDate" />
	</resultMap>








</mapper>
